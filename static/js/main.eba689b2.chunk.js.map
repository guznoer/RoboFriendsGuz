{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","cardArray","robots","map","robot","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","users","json","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAKH,EAAMI,IAAG,+BAA0BL,EAA1B,cACnB,gCACI,6BAAKC,IACL,4BAAIC,WCOLI,EAbE,SAAC,GAAgB,IAExBC,EAFuB,EAAbC,OAESC,KAAI,SAACC,EAAOC,GACjC,OAAO,cAAC,EAAD,CAAcX,GAAIU,EAAMV,GAAIC,KAAMS,EAAMT,KAAMC,MAAOQ,EAAMR,OAAhDS,MAGtB,OACI,mCACKJ,KCCEK,EAXG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,uBACIC,KAAK,OACLC,YAAY,gBACZC,SAAUH,EACVV,UAAU,gDCEPc,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,aC6CJC,E,kDAxCX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IAOVO,eAAiB,SAACC,GAEd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAR1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRoB,YAAa,IAJF,E,qDAanB,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,UACpBF,MAAK,SAAAzB,GACF,EAAKmB,SAAS,CACVnB,OAAQA,S,oBAKxB,WAAU,IAAD,EAC2B4B,KAAKL,MAA7BvB,EADH,EACGA,OAAQoB,EADX,EACWA,YACVS,EAAiB7B,EAAO8B,QAAO,SAAA5B,GACjC,OAAOA,EAAMT,KAAKsC,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQ/B,EAAOiC,OACX,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ6B,SALN,gD,GA9BdK,aCKHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eba689b2.chunk.js","sourcesContent":["// import React  from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 shadow-5 pa3 ma2 bw2 grow\">\r\n            <img alt={name} src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n    const cardArray = robots.map((robot, i) => {\r\n        return <Card key={i} id={robot.id} name={robot.name} email={robot.email} />;\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {cardArray}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardList;","const SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Search Robots\"\r\n            onChange={searchChange}\r\n            className=\"bg-light-blue ba bw1 b--light-blue pa2 ma3\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox;","const Scroll = (props) => {\r\n    return(\r\n        <div style={{ overflowY: 'scroll', border: '3px solid black', height: '500px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n// import { robots } from './robots';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        // console.log(event.target.value);\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(users => users.json())\r\n            .then(robots => {\r\n                this.setState({\r\n                    robots: robots\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n\r\n        return !robots.length ? <h1>Loading...</h1> :\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                </Scroll>\r\n            </div>;\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}